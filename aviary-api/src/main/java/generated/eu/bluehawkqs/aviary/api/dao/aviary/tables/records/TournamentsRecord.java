/*
 * This file is generated by jOOQ.
*/
package eu.bluehawkqs.aviary.api.dao.aviary.tables.records;


import eu.bluehawkqs.aviary.api.dao.aviary.tables.Tournaments;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TournamentsRecord extends UpdatableRecordImpl<TournamentsRecord> implements Record8<Integer, String, String, String, Timestamp, Timestamp, Timestamp, Integer> {

    private static final long serialVersionUID = -267706144;

    /**
     * Setter for <code>aviary.tournaments.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>aviary.tournaments.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>aviary.tournaments.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>aviary.tournaments.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>aviary.tournaments.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>aviary.tournaments.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>aviary.tournaments.location</code>.
     */
    public void setLocation(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>aviary.tournaments.location</code>.
     */
    public String getLocation() {
        return (String) get(3);
    }

    /**
     * Setter for <code>aviary.tournaments.start-date</code>.
     */
    public void setStartDate(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>aviary.tournaments.start-date</code>.
     */
    public Timestamp getStartDate() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>aviary.tournaments.end-date</code>.
     */
    public void setEndDate(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>aviary.tournaments.end-date</code>.
     */
    public Timestamp getEndDate() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>aviary.tournaments.registration-deadline</code>.
     */
    public void setRegistrationDeadline(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>aviary.tournaments.registration-deadline</code>.
     */
    public Timestamp getRegistrationDeadline() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>aviary.tournaments.size</code>.
     */
    public void setSize(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>aviary.tournaments.size</code>.
     */
    public Integer getSize() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, String, Timestamp, Timestamp, Timestamp, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, String, Timestamp, Timestamp, Timestamp, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Tournaments.TOURNAMENTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Tournaments.TOURNAMENTS.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Tournaments.TOURNAMENTS.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Tournaments.TOURNAMENTS.LOCATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Tournaments.TOURNAMENTS.START_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Tournaments.TOURNAMENTS.END_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Tournaments.TOURNAMENTS.REGISTRATION_DEADLINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Tournaments.TOURNAMENTS.SIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getLocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getRegistrationDeadline();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TournamentsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TournamentsRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TournamentsRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TournamentsRecord value4(String value) {
        setLocation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TournamentsRecord value5(Timestamp value) {
        setStartDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TournamentsRecord value6(Timestamp value) {
        setEndDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TournamentsRecord value7(Timestamp value) {
        setRegistrationDeadline(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TournamentsRecord value8(Integer value) {
        setSize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TournamentsRecord values(Integer value1, String value2, String value3, String value4, Timestamp value5, Timestamp value6, Timestamp value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TournamentsRecord
     */
    public TournamentsRecord() {
        super(Tournaments.TOURNAMENTS);
    }

    /**
     * Create a detached, initialised TournamentsRecord
     */
    public TournamentsRecord(Integer id, String name, String description, String location, Timestamp startDate, Timestamp endDate, Timestamp registrationDeadline, Integer size) {
        super(Tournaments.TOURNAMENTS);

        set(0, id);
        set(1, name);
        set(2, description);
        set(3, location);
        set(4, startDate);
        set(5, endDate);
        set(6, registrationDeadline);
        set(7, size);
    }
}
